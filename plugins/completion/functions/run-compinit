#!/bin/zsh
#
# run-compinit - run compinit in a smarter, faster way
#

#function run-compinit {
  emulate -L zsh
  setopt localoptions extendedglob

  # Use ZSH_COMPDUMP for location of completion file.
  local zcompdump
  if [[ -n "$ZSH_COMPDUMP" ]]; then
    zcompdump="$ZSH_COMPDUMP"
  else
    zcompdump="${__zsh_cache_dir:-${XDG_CACHE_HOME:-$HOME/.cache}/zsh}/zcompdump"
  fi
  [[ -d $zcompdump:h ]] || mkdir -p $zcompdump:h

  # `run-compinit -f` forces a cache reset.
  if [[ "$1" == "-f" ]] || [[ "$1" == "--force" ]]; then
    shift
    [[ -f "$zcompdump" ]] && rm -rf -- $zcompdump
  fi

  # Compfix flag
  local -a compinit_flags=(-d "$zcompdump")
  if zstyle -t ':zephyr:plugin:completion' 'disable-compfix'; then
    # Allow insecure directories in fpath
    compinit_flags=(-u $compinit_flags)
  else
    # Remove insecure directories from fpath
    compinit_flags=(-i $compinit_flags)
  fi

  # Initialize completions
  autoload -Uz compinit
  if zstyle -t ':zephyr:plugin:completion' 'use-cache'; then
    # Load and initialize the completion system ignoring insecure directories with a
    # cache time of 20 hours, so it should almost always regenerate the first time a
    # shell is opened each day.
    local compdump_cache=($zcompdump(Nmh-20))
    if (( $#compdump_cache )); then
      compinit -C $compinit_flags
    else
      compinit $compinit_flags
      # Ensure $zcompdump is younger than the cache time even if it isn't regenerated.
      touch "$zcompdump"
    fi
  else
    compinit $compinit_flags
  fi

  # Compile zcompdump, if modified, in background to increase startup speed.
  {
    if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
      if command mkdir "${zcompdump}.zwc.lock" 2>/dev/null; then
        zcompile "$zcompdump"
        command rmdir  "${zcompdump}.zwc.lock" 2>/dev/null
      fi
    fi
  } &!
#}
